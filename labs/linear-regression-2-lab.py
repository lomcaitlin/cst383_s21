import numpy as npimport pandas as pdfrom matplotlib import rcParamsimport seaborn as snsfrom scipy.stats import zscoreimport matplotlib.pyplot as pltfrom sklearn.model_selection import train_test_splitfrom sklearn.preprocessing import StandardScalerfrom sklearn.neighbors import KNeighborsRegressorfrom sklearn.linear_model import LinearRegression# 1 : read CPU datadf = pd.read_csv('https://raw.githubusercontent.com/grbruns/cst383/master/machine.csv')df.index = df['vendor']+' '+df['model']df.drop(['vendor','model'], axis=1, inplace=True)df['cs'] = np.round(1e3/df['myct'], 2) # clock speed in MHz# 2 : create NumPy arrays X and y from datay = df['prp'].valuespredictors = ['myct', 'erp']X = df[predictors].values# 3 : Create training & test sets using train_test_split(). Create linearl model from trainX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)reg = LinearRegression()reg.fit(X_train, y_train)# 4 : What are the coefficients of modelprint('Intercept: {:.2f}'.format(reg.intercept_))       # 6.57print(predictors[0]+': {:.3f}'.format(reg.coef_[0]))    # -0.013print(predictors[1]+': {:.3f}'.format(reg.coef_[1]))    # 1.037## I should probably scale the predictors so I can see which one is more useful# 5 : 