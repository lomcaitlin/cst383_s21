import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport seaborn as snsfrom sklearn.tree import DecisionTreeClassifier, export_graphvizfrom sklearn.model_selection import train_test_splitimport graphviz # No module named 'graphviz'df = pd.read_csv('https://raw.githubusercontent.com/grbruns/cst383/master/College.csv', index_col=0)# 3 : convert 'Private' column to values 0 & 1, 1 for privatedf['Private'] = (df['Private'] == 'Yes').values.astype(int)# 4 : Use df.info() and .describe() to remember whats in datadf.info()df.describe()# 5 : select predictors & create NumPy arrays X & y, then do training/test splitX = df[['S.F.Ratio', 'Grad.Rate', 'Outstate', 'perc.alumni']].valuesy = df['Private'].valuesX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)# 6 : train DecisionTreeClassifier. use training data from prev stepclf = DecisionTreeClassifier(random_state=0)clf.fit(X_train, y_train)# 7 : use classification tree to predict test data. compute confusion matrix & accuracyy_predict = clf.predict(X_test)# print_conf_mtx(y_test, y_predict, classes=['Private', 'Public'])pd.crosstab(y_test, y_predict, margins_name=['Public', 'Private']) # how to get crosstab labels??(y_predict == y_test).mean() # accuracy# 8 : 